name: jax-sampling

on:
  pull_request:
  push:
    branches: [main]
    paths:
      - ".github/workflows/*"
      - "pymc/**"
      - "setup.py"
      - "pyproject.toml"
      - "buildosx"
      - "conda-envs/**"
      - "codecov.yml"

jobs:
  pytest:
    strategy:
      matrix:
        os: [ubuntu-latest]
        floatx: [float64]
        test-subset:
          - pymc/tests/test_sampling_jax.py
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      TEST_SUBSET: ${{ matrix.test-subset }}
      AESARA_FLAGS: floatX=${{ matrix.floatx }},gcc__cxxflags='-march=native'
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - name: Cache conda
        uses: actions/cache@v1
        env:
          # Increase this value to reset cache if environment-test-py39.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('conda-envs/environment-test-py39.yml') }}
      - name: Cache multiple paths
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if requirements.txt has not changed
          CACHE_NUMBER: 0
        with:
          path: |
            ~/.cache/pip
            $RUNNER_TOOL_CACHE/Python/*
            ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-build-${{ matrix.python-version }}-${{
            hashFiles('requirements.txt') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          mamba-version: "*"
          activate-environment: pymc-test-py39
          channel-priority: strict
          environment-file: conda-envs/environment-test-py39.yml
          use-mamba: true
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
      - name: Install pymc
        run: |
          conda activate pymc-test-py39
          pip install -e .
          python --version
      - name: Install jax specific dependencies
        run: |
          conda activate pymc-test-py39
          pip install "numpyro>=0.8.0"
          pip install git+https://github.com/blackjax-devs/blackjax.git@main
      - name: Run tests
        run: |
          python -m pytest -vv --cov=pymc --cov-report=xml --cov-report term --durations=50 $TEST_SUBSET
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          env_vars: TEST_SUBSET
          name: JAX tests - ${{ matrix.os }} ${{ matrix.floatx }}
          fail_ci_if_error: false
